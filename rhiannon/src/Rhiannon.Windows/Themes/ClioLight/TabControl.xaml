<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Font.xaml"/>
        <ResourceDictionary Source="Color.xaml"/>
        <ResourceDictionary>


			<!--<SolidColorBrush x:Key="ł" Color="#8C8E94" />
			<SolidColorBrush x:Key="Ò" Color="{StaticResource Color_04}" />-->
			<!--<LinearGradientBrush x:Key="Ò" StartPoint="0,0" EndPoint="0,1">
				<GradientBrush.GradientStops>
					<GradientStop Color="#F3F3F3" Offset="0" />
					<GradientStop Color="#EBEBEB" Offset="0.5" />
					<GradientStop Color="#DDDDDD" Offset="0.5" />
					<GradientStop Color="#CDCDCD" Offset="1" />
				</GradientBrush.GradientStops>
			</LinearGradientBrush>-->
			<!--<LinearGradientBrush x:Key="ń" StartPoint="0,0" EndPoint="0,1">
				<GradientBrush.GradientStops>
					<GradientStop Color="#EAF6FD" Offset="0.15" />
					<GradientStop Color="#D9F0FC" Offset=".5" />
					<GradientStop Color="#BEE6FD" Offset=".5" />
					<GradientStop Color="#A7D9F5" Offset="1" />
				</GradientBrush.GradientStops>
			</LinearGradientBrush>
			<SolidColorBrush x:Key="Ņ" Color="#F9F9F9" />
			<SolidColorBrush x:Key="Ň" Color="#3C7FB1" />
			<SolidColorBrush x:Key="ņ" Color="#F4F4F4" />
			<SolidColorBrush x:Key="ň" Color="#FFC9C7BA" />-->

			<Style x:Key="MainTabControl" TargetType="{x:Type TabControl}">
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				<Setter Property="VerticalContentAlignment" Value="Stretch" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TabControl}">
							<Grid KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="True" ClipToBounds="True" Margin="0,-10,0,0">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Grid Name="HeaderPanel" Grid.Row="0" Panel.ZIndex="1" VerticalAlignment="Top" Margin="0">
									<Border Background="#4D4D4D" VerticalAlignment="Stretch">
										<!--<Border.Effect>
											<DropShadowEffect BlurRadius="4" ShadowDepth="3" Direction="-90" Opacity="0.3" />
										</Border.Effect>-->
										<TabPanel KeyboardNavigation.TabIndex="1" IsItemsHost="True" VerticalAlignment="Stretch" Margin="0" />
									</Border>
								</Grid>
								<Border Name="ContentPanel" Background="Transparent" KeyboardNavigation.TabNavigation="Local"
										KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" Grid.Row="1">
									<ContentPresenter Name="PART_SelectedContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
													  ContentSource="SelectedContent" Margin="0,10,0,10" />
								</Border>
							</Grid>
							<ControlTemplate.Triggers>
								<!--<Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
									<Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
									<Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
									<Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
									<Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
								</Trigger>
								<Trigger Property="TabControl.TabStripPlacement" Value="Left">
									<Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
									<Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
									<Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
									<Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
									<Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
									<Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
									<Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
									<Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
								</Trigger>
								<Trigger Property="TabControl.TabStripPlacement" Value="Right">
									<Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
									<Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
									<Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
									<Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
									<Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
									<Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
									<Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
									<Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
								</Trigger>-->
								<Trigger Property="UIElement.IsEnabled" Value="False">
									<Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>


			<Style x:Key="TabItemFocusVisualStyle">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="3,3,3,1" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeDashArray="1 2" SnapsToDevicePixels="True" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<!--<Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
				<Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource TabItemFocusVisualStyle}" />
				<Setter Property="Foreground" Value="#FFF" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				<Setter Property="VerticalContentAlignment" Value="Stretch" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TabItem}">
							<Grid SnapsToDevicePixels="True">
								<Border Name="Bd" Background="Transparent">
									<ContentPresenter Name="Content" ContentSource="Header" SnapsToDevicePixels="True" RecognizesAccessKey="True"
													  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
								</Border>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="UIElement.IsMouseOver" Value="True">
									<Setter TargetName="Bd" Value="#5D5D5D" Property="Background" />
								</Trigger>
								<Trigger Property="TabItem.IsSelected" Value="True">
									<Setter Property="Panel.ZIndex" Value="1" />
									<Setter TargetName="Bd" Value="#5D5D5D" Property="Background" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="TabItem.IsSelected" Value="False" />
										<Condition Property="UIElement.IsMouseOver" Value="True" />
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Value="{StaticResource Ň}" Property="Border.BorderBrush" />
								</MultiTrigger>
								<Trigger Property="TabItem.TabStripPlacement" Value="Bottom">
									<Setter TargetName="Bd" Property="Border.BorderThickness" Value="1,0,1,1" />
								</Trigger>
								<Trigger Property="TabItem.TabStripPlacement" Value="Left">
									<Setter TargetName="Bd" Property="Border.BorderThickness" Value="1,1,0,1" />
								</Trigger>
								<Trigger Property="TabItem.TabStripPlacement" Value="Right">
									<Setter TargetName="Bd" Property="Border.BorderThickness" Value="0,1,1,1" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="TabItem.IsSelected" Value="True" />
										<Condition Property="TabItem.TabStripPlacement" Value="Top" />
									</MultiTrigger.Conditions>
									<Setter Property="FrameworkElement.Margin" Value="-2,-2,-2,-1" />
									<Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,0,0,1" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="TabItem.IsSelected" Value="True" />
										<Condition Property="TabItem.TabStripPlacement" Value="Bottom" />
									</MultiTrigger.Conditions>
									<Setter Property="FrameworkElement.Margin" Value="-2,-1,-2,-2" />
									<Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,1,0,0" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="TabItem.IsSelected" Value="True" />
										<Condition Property="TabItem.TabStripPlacement" Value="Left" />
									</MultiTrigger.Conditions>
									<Setter Property="FrameworkElement.Margin" Value="-2,-2,-1,-2" />
									<Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,0,1,0" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="TabItem.IsSelected" Value="True" />
										<Condition Property="TabItem.TabStripPlacement" Value="Right" />
									</MultiTrigger.Conditions>
									<Setter Property="FrameworkElement.Margin" Value="-1,-2,-2,-2" />
									<Setter TargetName="Content" Property="FrameworkElement.Margin" Value="1,0,0,0" />
								</MultiTrigger>
								<Trigger Property="UIElement.IsEnabled" Value="False">
									<Setter TargetName="Bd" Value="{StaticResource ņ}" Property="Border.Background" />
									<Setter TargetName="Bd" Value="{StaticResource ň}" Property="Border.BorderBrush" />
									<Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>-->

		</ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
</ResourceDictionary>